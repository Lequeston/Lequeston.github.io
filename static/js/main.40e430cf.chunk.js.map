{"version":3,"sources":["components/CardBook/CardBook.js","redux/action.js","redux/types.js","components/CardBook/index.js","components/CardsBook/index.js","components/CardsBook/CardsBook.js","redux/setting.js","components/SelectFilter/SelectFilter.js","components/SelectFilter/index.js","components/SelectsFilters/SelectsFilters.js","components/SelectsFilters/index.js","components/ButtonSort/ButtonSort.js","components/ButtonSort/index.js","components/ButtonsSort/index.js","components/ButtonsSort/ButtonsSort.js","views/Home/Home.js","components/Header/Header.js","components/Header/index.js","App.js","serviceWorker.js","redux/redusers/cardsBookReducer.js","redux/rootReducer.js","index.js"],"names":["months","states","mapDispatchToProps","increaseRating","id","type","decreaseRating","addChosen","deleteChosen","CardBook","connect","book","image","information","bookName","publishingHouse","author","dateBirth","rating","imgLoaded","isChosen","dispatch","useDispatch","buttonChosen","className","onClick","src","url","a","fetch","response","blob","console","log","loadPhoto","alt","day","month","year","CardsBook","arrayBooks","useSelector","state","length","map","visible","res","values","value","isVisible","key","json","books","Options","options","name","filter","typeFilter","SelectFilter","htmlFor","onChange","e","target","Selects","filters","SelectsFilters","styles","sortBooks","typeSort","ButtonSort","isAdapt","push","join","ButtonsSort","sorts","index","isSortAscending","Home","searchByName","str","payload","viewChosen","Header","href","placeholder","App","Fragment","Boolean","window","location","hostname","match","initialState","arrayChosen","cardsBookReducer","elem","action","reverse","flag","sortAlphabet","first","second","find","toLowerCase","b","Math","min","i","sortRating","sortDate","Date","ratingChange","findIndex","slice","addFilters","total","forEach","createBook","Map","reduce","Array","from","Set","sort","localStorage","getItem","JSON","parse","URL","createObjectURL","findStr","set","indexOf","filterBook","toString","dropping","setItem","stringify","removeItem","chosen","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.40e430cf.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect, useDispatch} from 'react-redux'\n\nimport \"./CardBook.scss\";\nimport {decreaseRating, increaseRating, loadPhoto, addChosen, deleteChosen} from \"../../redux/action\";\n\nconst months = [\n  \"Января\",\n  \"Февраля\",\n  \"Марта\",\n  \"Апреля\",\n  \"Майя\",\n  \"Июня\",\n  \"Июля\",\n  \"Августа\",\n  \"Сентября\",\n  \"Октября\",\n  \"Ноября\",\n  \"Декабря\"\n];\n\nconst states = {\n  name: \"Название:\",\n  info: \"Информация:\",\n  dom: \"Издательство:\",\n  auth: \"Автор:\",\n  date: \"Дата создания:\",\n  rat: \"Рейтинг:\"\n}\nconst CardBook = ({ book, increaseRating, decreaseRating, deleteChosen, addChosen}) => {\n  const {image, information, bookName, publishingHouse, author, id, dateBirth, rating, imgLoaded, isChosen} = book;\n  const dispatch = useDispatch();\n\n  const getImage = () => {\n    if (imgLoaded){\n      return image;\n    } else {\n      dispatch(loadPhoto(id, image));\n      return \"\";\n    }\n  }\n\n  const buttonChosen = (!isChosen)\n    ? <button type=\"button\" className=\"btn btn-secondary\" onClick={() => addChosen(id)}>Доавить в избранное</button>\n    : <button type=\"button\" className=\"btn btn-secondary\" onClick={() => deleteChosen(id)}>Удалить из избранного</button>;\n\n  return (\n    <div className=\"col mb-4\">\n      <div className=\"card h-100\">\n        <img src={getImage()} className=\"card-img-top card-book-image\" alt=\"loaded\"/>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{`${states.name} ${bookName}`}</h5>\n          <p className=\"card-text\">{`${states.info} ${information}`}</p>\n          <p className=\"card-text\">{`${states.dom} ${publishingHouse}`}</p>\n          <p className=\"card-text\">{`${states.auth} ${author}`}</p>\n          <p className=\"card-text\">{`${states.date} ${dateBirth.day} ${months[dateBirth.month - 1]} ${dateBirth.year}`}</p>\n          <p className=\"card-text\">{`${states.rat} ${rating}`}</p>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => decreaseRating(id)}>-</button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => increaseRating(id)}>+</button>\n          </div>\n          {buttonChosen}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  increaseRating, decreaseRating, addChosen, deleteChosen\n}\n\nexport default connect(null, mapDispatchToProps)(CardBook);","import {\n  ADD_CHOSEN,\n  DECREASE_RATING, DELETE_CHOSEN,\n  FETCH_ADD_BOOKS,\n  FILTER,\n  INCREASE_RATING,\n  LOAD_PHOTO,\n  SEARCH_BY_NAME,\n  SORT_ARRAY, VIEW_CHOSEN\n} from \"./types\";\nimport {URL_BOOKS} from \"./setting\";\n\nexport const fetchAddBooks = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch(URL_BOOKS);\n      const json = await response.json();\n      dispatch({type: FETCH_ADD_BOOKS, books: json});\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const loadPhoto = (id, url) => {\n  return async dispatch => {\n    try {\n      const response = await fetch(url);\n      const blob = await response.blob();\n      dispatch({type: LOAD_PHOTO, blob, id});\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const searchByName = (str) => {\n  return {\n    type: SEARCH_BY_NAME,\n    payload: str\n  }\n}\n\nexport const increaseRating = (id) => {\n  return {\n    type: INCREASE_RATING,\n    id\n  }\n}\n\nexport const decreaseRating = (id) => {\n  return {\n    type: DECREASE_RATING,\n    id\n  }\n}\n\nexport const filter = (typeFilter, value) => {\n  return {\n    type: FILTER,\n    typeFilter,\n    value\n  }\n}\n\nexport const sortBooks = (typeSort) => {\n  return {\n    type: SORT_ARRAY,\n    typeSort\n  }\n}\n\nexport const addChosen = (id) => {\n  return {\n    type: ADD_CHOSEN,\n    id\n  }\n}\n\nexport const deleteChosen = (id) => {\n  return {\n    type: DELETE_CHOSEN,\n    id\n  }\n}\n\nexport const viewChosen = () => {\n  return {\n    type: VIEW_CHOSEN\n  }\n}","export const FETCH_ADD_BOOKS = \"FETCH_ADD_BOOKS\"; //получить массив книг с сервера\nexport const INCREASE_RATING = \"INCREASE_RATING\"; //повысить рейтинг книге\nexport const DECREASE_RATING = \"DECREASE_RATING\"; //понизить рейтинг книге\nexport const LOAD_PHOTO = \"LOAD_PHOTO\"; //загрузка фото\nexport const SEARCH_BY_NAME = \"SEARCH_BY_NAME\"; //поиск по фото\nexport const FILTER = \"FILTER\";\nexport const SORT_ARRAY = \"SORT_ARRAY\";\nexport const ADD_CHOSEN = \"ADD_CHOSEN\";\nexport const DELETE_CHOSEN = \"DELETE_CHOSEN\";\nexport const VIEW_CHOSEN = \"VIEW_CHOSEN\";\n\nexport const TYPE_FILTER_PUBLISHING_HOUSE = \"TYPE_FILTER_PUBLISHING_HOUSE\";\nexport const TYPE_FILTER_AUTHOR = \"TYPE_FILTER_AUTHOR\";\nexport const TYPE_FILTER_DATE_BIRTH_YEAR = \"TYPE_FILTER_DATE_BIRTH_YEAR\";\nexport const TYPE_FILTER_INPUT_TEXT = \"TYPE_FILTER_INPUT_TEXT\";\nexport const TYPE_FILTER_DEFAULT = \"TYPE_FILTER_DEFAULT\";\nexport const TYPE_FILTER_IS_CHOSEN = \"TYPE_FILTER_IS_CHOSEN\";\n\nexport const TYPE_SORT_ALPHABET = \"TYPE_SORT_ALPHABET\";\nexport const TYPE_SORT_RATING = \"TYPE_SORT_RATING\";\nexport const TYPE_SORT_DATE = \"TYPE_SORT_DATE\";\n\nexport const ARRAY_CHOSEN = \"ARRAY_CHOSEN\";\n","import CardBook from \"./CardBook\";\n\nexport default CardBook;","import CardsBook from \"./CardsBook\";\n\nexport default CardsBook;","import React from \"react\";\nimport CardBook from \"../CardBook\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport \"./CardsBook.scss\";\nimport {fetchAddBooks} from \"../../redux/action\";\n\nconst isVisible = (visible) => {\n  let res = true;\n  for(const value of visible.values()) {\n    res = res && value;\n  }\n  return res;\n}\n\nconst CardsBook = () => {\n  const dispatch = useDispatch();\n  const arrayBooks = useSelector(state => state.arrayBooks.arrayBooks);\n  if (!arrayBooks.length) {\n    dispatch(fetchAddBooks());\n    return <p className=\"text-center\">Книг пока нет</p>\n  }\n\n  return arrayBooks.map(book => isVisible(book.visible) && <CardBook book={book} key={book.id}/>)\n}\n\nexport default CardsBook;","export const URL_BOOKS = \"https://lequeston.github.io/test/books.json\";","import React from \"react\";\n\nimport \"./SelectFilter.scss\";\nimport {connect} from \"react-redux\";\nimport { filter } from \"../../redux/action\";\n\nconst SelectFilter = ({ name, options, type, filter }) => {\n  const inputSelect = (e) => {\n    filter(type, e.target.value);\n  }\n  return(\n    <div className=\"flex-fill input-group\">\n      <div className=\"input-group-prepend\">\n        <label className=\"input-group-text\" htmlFor={type}>{name}</label>\n      </div>\n      <select className=\"custom-select\" id={type} onChange={inputSelect}>\n        <Options options={options} />\n      </select>\n    </div>\n  );\n}\n\nconst Options = ({ options }) => {\n  return options.map(name => <option value={name} key={name}>{name}</option>)\n}\n\nconst mapDispatchToProps = {\n  filter\n}\n\nexport default connect(null, mapDispatchToProps)(SelectFilter);","import SelectFilter from \"./SelectFilter\";\n\nexport default SelectFilter;","import React from \"react\";\n\nimport {connect} from 'react-redux'\nimport SelectFilter from \"../SelectFilter\";\n\nconst SelectsFilters = ({ filters }) => {\n  return (\n    <div className=\"d-flex\">\n      <Selects filters={filters} />\n    </div>\n  )\n}\n\nconst Selects = ({ filters }) => {\n  return filters.map(({ name, options, type}) => <SelectFilter name={name} options={options} type={type} key={type}/>);\n}\n\nconst mapStateToProps = state => ({\n  filters: state.arrayBooks.filters\n})\n\nexport default connect(mapStateToProps, null)(SelectsFilters);","import SelectsFilters from \"./SelectsFilters\";\n\nexport default SelectsFilters;","import React from \"react\";\nimport {sortBooks} from \"../../redux/action\";\nimport {connect} from 'react-redux'\nimport \"./ButtonSort.scss\"\n\nconst styles = [\"btn\", [\"btn-secondary\"]];\nconst ButtonSort = ({name, isAdapt, type, sortBooks}) => {\n  if (!isAdapt){\n    styles.push(\"disabled\");\n  }\n  const className = styles.join(\" \");\n  return <button type=\"button\" className={className} onClick={() => sortBooks(type)}>{name}</button>\n}\n\nconst mapDispatchToProps = {\n  sortBooks\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonSort);","import ButtonSort from \"./ButtonSort\";\n\nexport default ButtonSort;","import ButtonsSort from \"./ButtonsSort\";\n\nexport default ButtonsSort;","import React from \"react\";\nimport {connect} from 'react-redux';\n\nimport \"./ButtonsSort.scss\";\nimport ButtonSort from \"../ButtonSort\";\n\nconst ButtonsSort = ({sorts}) => {\n  return sorts.map(({name, isSortAscending, isAdapt, type}, index) => <ButtonSort\n    name={name}\n    isSortAscending={isSortAscending}\n    isAdapt={isAdapt}\n    type={type}\n    key={index}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  sorts: state.arrayBooks.sorts\n})\n\nexport default connect(mapStateToProps, null)(ButtonsSort);","import React from \"react\";\nimport CardsBook from \"../../components/CardsBook\";\nimport SelectsFilters from \"../../components/SelectsFilters\";\nimport \"./Home.scss\";\nimport ButtonsSort from \"../../components/ButtonsSort\";\n\nconst Home = () => {\n  return (\n    <main className=\"container\">\n      <p className=\"text-uppercase font-weight-bold m-2 filter\"> Фильтрация </p>\n      <SelectsFilters />\n      <p className=\"text-uppercase font-weight-bold m-2 filter\"> Сортировка </p>\n      <ButtonsSort />\n      <div className=\"row row-cols-1 row-cols-md-3 pt-3\">\n        <CardsBook />\n      </div>\n    </main>\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {searchByName, viewChosen} from \"../../redux/action\";\n\nconst Header = ({ searchByName, viewChosen, isChosen }) => {\n  const changeInputHandler = (e) => {\n    searchByName(e.target.value);\n  };\n  const name = (!isChosen) ? \"Избранное\" : \"Общее\";\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"/\">Lequeston</a>\n      <input className=\"form-control\" type=\"text\" placeholder=\"Поиск\" onChange={changeInputHandler}/>\n      <button type=\"button\" className=\"btn btn-secondary\" onClick={() => viewChosen()}>{name}</button>\n    </nav>\n  )\n}\n\nconst mapDispatchToProps = {\n  searchByName, viewChosen\n}\n\nconst mapStateToProps = state => ({\n  isChosen: state.arrayBooks.isChosen\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import Header from \"./Header\";\n\nexport default Header;","import React from 'react';\nimport './App.scss';\nimport Home from \"./views/Home/Home\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  DECREASE_RATING,\n  FETCH_ADD_BOOKS,\n  FILTER,\n  INCREASE_RATING,\n  LOAD_PHOTO,\n  SEARCH_BY_NAME,\n  TYPE_FILTER_AUTHOR,\n  TYPE_FILTER_DATE_BIRTH_YEAR,\n  TYPE_FILTER_DEFAULT,\n  TYPE_FILTER_INPUT_TEXT,\n  TYPE_FILTER_PUBLISHING_HOUSE,\n  TYPE_SORT_ALPHABET,\n  TYPE_SORT_RATING,\n  SORT_ARRAY,\n  TYPE_SORT_DATE,\n  ADD_CHOSEN,\n  ARRAY_CHOSEN, DELETE_CHOSEN, VIEW_CHOSEN, TYPE_FILTER_IS_CHOSEN\n} from \"../types\";\n\nconst ALL_VALUES = \"Всё\";\n\nconst initialState = {\n  arrayBooks: [],\n  arrayChosen: [],\n  isChosen: false,\n  filters: [\n    {\n      name: \"Выберите издательство\",\n      options: [ALL_VALUES],\n      type: TYPE_FILTER_PUBLISHING_HOUSE\n    },\n    {\n      name: \"Выберите автора\",\n      options: [ALL_VALUES],\n      type: TYPE_FILTER_AUTHOR\n    },\n    {\n      name: \"Выберите год\",\n      options: [ALL_VALUES],\n      type: TYPE_FILTER_DATE_BIRTH_YEAR\n    },\n  ],\n  sorts: [\n    {\n      name: \"По дате\",\n      isSortAscending: false,\n      isAdapt: false,\n      type: TYPE_SORT_DATE\n    },\n    {\n      name: \"По алфавиту\",\n      isSortAscending: false,\n      isAdapt: false,\n      type: TYPE_SORT_ALPHABET\n    },\n    {\n      name: \"По рейтингу\",\n      isSortAscending: false,\n      isAdapt: true,\n      type: TYPE_SORT_RATING\n    }\n  ]\n}\n\nconst cardsBookReducer = (state = initialState, action) => {\n  let arrayBooks, filters, sorts, arrayChosen, str, elem;\n\n  const reverse = (flag, value) => {\n    return (flag) ? value : -value;\n  }\n\n  const sortAlphabet = (first, second) => {\n    const elem = state.sorts.find(({type}) => type === TYPE_SORT_ALPHABET);\n    const flag = elem.isSortAscending;\n    const a = first.bookName.toLowerCase();\n    const b = second.bookName.toLowerCase();\n    if (a === b){\n      return 0;\n    } else {\n      let length = Math.min(a.length, b.length);\n      for (let i = 0; i < length; i++){\n        if (a[i] > b[i]) {\n          return reverse(flag, -1);\n        } else if (a[i] < b[i]){\n          return reverse(flag, 1);\n        }\n      }\n      if (a.length < b.length){\n        return reverse(flag, -1);\n      } else {\n        return reverse(flag, 1);\n      }\n    }\n  }\n\n  const sortRating = (first, second) => {\n    const a = first.rating;\n    const b = second.rating;\n    const elem = state.sorts.find(({type}) => type === TYPE_SORT_RATING);\n    const flag = elem.isSortAscending;\n    return reverse(flag, a - b);\n  }\n\n  const sortDate = (first, second) => {\n    const elem = state.sorts.find(({type}) => type === TYPE_SORT_DATE);\n    const flag = elem.isSortAscending;\n    const a = new Date(first.dateBirth.year, first.dateBirth.month, first.dateBirth.day);\n    const b = new Date(second.dateBirth.year, second.dateBirth.month, second.dateBirth.day);\n    return reverse(flag, b - a);\n  }\n\n  const ratingChange = () => {\n    const {id, type} = action;\n    const index = state.arrayBooks.findIndex(book => book.id === id);\n    const length = state.arrayBooks.length;\n    const elem = {...state.arrayBooks[index]};\n    elem.rating = (type === INCREASE_RATING) ? elem.rating + 1 : elem.rating - 1;\n    return [...state.arrayBooks.slice(0, index), elem, ...state.arrayBooks.slice(index + 1, length)];\n  };\n\n  const addFilters = (total, { publishingHouse, author, dateBirth}) => {\n    let res = [...total]\n    res.forEach(elem => {\n      switch (elem.type) {\n        case TYPE_FILTER_PUBLISHING_HOUSE:\n          elem.options = [...elem.options, publishingHouse];\n          break;\n        case TYPE_FILTER_DATE_BIRTH_YEAR:\n          elem.options = [...elem.options, dateBirth.year];\n          break;\n        case TYPE_FILTER_AUTHOR:\n          elem.options = [...elem.options, author];\n          break;\n        default:\n          break;\n      }\n    });\n    return res;\n  };\n\n  const createBook = ({ bookName, id, image, information, publishingHouse, author, dateBirth, rating}) => {\n    return {\n      id,\n      image,\n      information,\n      bookName,\n      publishingHouse,\n      author,\n      dateBirth,\n      rating,\n      imgLoaded: false,\n      isChosen: false,\n      visible: new Map([[TYPE_FILTER_DEFAULT, true]])\n    }\n  };\n\n  switch (action.type) {\n    case FETCH_ADD_BOOKS:\n      const {books} = action;\n      arrayBooks = [ ...books.map(createBook)];\n      filters = arrayBooks.reduce(addFilters, state.filters);\n      filters.forEach(elem => {\n        elem.options = Array.from(new Set(elem.options));\n      });\n      arrayBooks.sort(sortRating);\n      str = localStorage.getItem(ARRAY_CHOSEN);\n      if (str) {\n        arrayChosen = JSON.parse(str);\n      } else {\n        arrayChosen = [];\n      }\n      arrayChosen.forEach(elem => (arrayBooks.find(({id}) => id === elem)).isChosen = true);\n      arrayChosen = Array.from(new Set(arrayChosen));\n      return {...state, arrayBooks, filters, arrayChosen};\n    case INCREASE_RATING:\n      arrayBooks = ratingChange()\n      if ((state.sorts.find(({type}) => type === TYPE_SORT_RATING)).isAdapt)\n        arrayBooks.sort(sortRating);\n      return {...state, arrayBooks };\n    case DECREASE_RATING:\n      return {...state, arrayBooks: ratingChange()};\n    case LOAD_PHOTO:\n      const {id, blob} = action;\n      const index = state.arrayBooks.findIndex(book => book.id === id);\n      const length = state.arrayBooks.length;\n      elem = {...state.arrayBooks[index]};\n      elem.image = URL.createObjectURL(blob);\n      elem.imgLoaded = true;\n      arrayBooks = [...state.arrayBooks.slice(0, index), elem, ...state.arrayBooks.slice(index + 1, length)];\n      return {...state, arrayBooks};\n    case SEARCH_BY_NAME:\n      const {payload} = action;\n      const findStr = payload.toLowerCase();\n      arrayBooks = [...state.arrayBooks];\n      arrayBooks.forEach(elem => {\n        const name = elem.bookName.toLowerCase();\n        elem.visible.set(TYPE_FILTER_INPUT_TEXT, (name.indexOf(findStr) !== -1));\n      });\n      return {...state, arrayBooks};\n    case FILTER:\n      const {typeFilter, value} = action;\n      arrayBooks = [...state.arrayBooks];\n\n      const filterBook = (book) => {\n        const {publishingHouse, dateBirth, author} = book;\n        const {year} = dateBirth;\n\n        switch (typeFilter) {\n          case TYPE_FILTER_PUBLISHING_HOUSE:\n            book.visible.set(TYPE_FILTER_PUBLISHING_HOUSE, (value === ALL_VALUES || publishingHouse === value));\n            break;\n          case TYPE_FILTER_DATE_BIRTH_YEAR:\n            book.visible.set(TYPE_FILTER_DATE_BIRTH_YEAR, (value === ALL_VALUES || year.toString() === value));\n            break;\n          case TYPE_FILTER_AUTHOR:\n            book.visible.set(TYPE_FILTER_AUTHOR, (value === ALL_VALUES || author === value));\n            break;\n          default:\n            break;\n        }\n      }\n\n      arrayBooks.forEach(filterBook);\n      return {...state, arrayBooks};\n\n    case SORT_ARRAY:\n      const {typeSort} = action;\n      arrayBooks = [...state.arrayBooks];\n      const dropping = (type) => {\n        return state.sorts.map((elem) => {\n          let res = {...elem};\n          if (type === elem.type){\n            if (res.isAdapt){\n              res.isSortAscending = !res.isSortAscending;\n            } else {\n              res.isAdapt = true;\n            }\n          } else {\n            res.isAdapt = false;\n          }\n          return res;\n        });\n      }\n      sorts = dropping(typeSort);\n      switch (typeSort) {\n        case TYPE_SORT_ALPHABET:\n          arrayBooks.sort(sortAlphabet);\n          break;\n        case TYPE_SORT_DATE:\n          arrayBooks.sort(sortDate);\n          break;\n        case TYPE_SORT_RATING:\n          arrayBooks.sort(sortRating);\n          break;\n        default:\n          break;\n      }\n\n      return {...state, arrayBooks, sorts }\n\n    case ADD_CHOSEN:\n      str = localStorage.getItem(ARRAY_CHOSEN);\n      arrayBooks = [...state.arrayBooks];\n      if (str) {\n        arrayChosen = JSON.parse(str);\n      } else {\n        arrayChosen = [];\n      }\n      arrayChosen = [...arrayChosen, action.id];\n      arrayChosen = Array.from(new Set(arrayChosen));\n      localStorage.setItem(ARRAY_CHOSEN, JSON.stringify(arrayChosen));\n      elem = arrayBooks.findIndex(({id}) => id === action.id);\n      arrayBooks[elem] = {...arrayBooks[elem], isChosen: true};\n      return {...state, arrayBooks, arrayChosen};\n\n    case DELETE_CHOSEN:\n      str = localStorage.getItem(ARRAY_CHOSEN);\n      arrayBooks = [...state.arrayBooks];\n      if (str) {\n        arrayChosen = JSON.parse(str);\n      } else {\n        arrayChosen = [];\n      }\n      const i = arrayChosen.findIndex(elem => elem === action.id);\n      arrayChosen = [...arrayChosen.slice(0, i), ...arrayChosen.slice(i + 1, arrayChosen.length)];\n      localStorage.removeItem(ARRAY_CHOSEN);\n      localStorage.setItem(ARRAY_CHOSEN, JSON.stringify(arrayChosen));\n      elem = arrayBooks.findIndex(({id}) => id === action.id);\n      arrayBooks[elem] = {...arrayBooks[elem], isChosen: false, visible: arrayBooks[elem].visible.set(TYPE_FILTER_IS_CHOSEN, (!state.isChosen || false))};\n      return {...state, arrayBooks, arrayChosen};\n\n    case VIEW_CHOSEN:\n      const isChosen = !state.isChosen;\n      arrayBooks = [...state.arrayBooks];\n      arrayBooks.forEach(elem => {\n        const chosen = elem.isChosen;\n        elem.visible.set(TYPE_FILTER_IS_CHOSEN, (!isChosen || chosen));\n      });\n      return {...state, arrayBooks, isChosen}\n    default:\n      return state;\n  }\n}\n\nexport default cardsBookReducer;","import {combineReducers} from \"redux\";\nimport cardsBookReducer from \"./redusers/cardsBookReducer\";\n\nconst rootReducer = combineReducers({\n  arrayBooks: cardsBookReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {compose, createStore, applyMiddleware} from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk\n  ),\n  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}